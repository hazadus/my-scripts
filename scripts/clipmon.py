#!/usr/bin/env -S uv run --quiet --script

# /// script
# dependencies = [
#   "pyobjc",
#   "loguru",
# ]
# ///
"""
–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ MacOS –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ —Ñ–∞–π–ª—ã.
"""
import time
from datetime import datetime
from pathlib import Path

from AppKit import NSPasteboard, NSStringPboardType
from loguru import logger

TEXT_CLIPS_PATH = Path.home() / "clipmon" / "text"


def main():
    logger.info("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞...")
    monitor_clipboard()


def monitor_clipboard(interval: int = 5):
    last_content = None
    try:
        while True:
            current_content = get_clipboard_content()
            if current_content != last_content:
                if current_content:
                    save_text_clip(current_content)
                last_content = current_content
            time.sleep(interval)
    except KeyboardInterrupt:
        logger.info("üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")


def get_clipboard_content():
    pb = NSPasteboard.generalPasteboard()
    content = pb.stringForType_(NSStringPboardType)
    return content if content is not None else ""


def save_text_clip(text: str):
    TEXT_CLIPS_PATH.mkdir(parents=True, exist_ok=True)

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    clip_path = TEXT_CLIPS_PATH / f"clip_{timestamp}.txt"

    with open(clip_path, "w", encoding="utf-8") as f:
        f.write(text)

    logger.info(f"‚úÖ –¢–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {clip_path}")


if __name__ == "__main__":
    main()
